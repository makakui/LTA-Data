View(mrt_sf)
View(mrt_sf)
View(stations_sf)
?tribble
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
View(total_outf)
View(stations_sf)
View(stations)
View(stations_sf)
View(stations_sf)
?tm_bubbles
tm_shape(total_outf %>% select(-OBJECTID)) + tm_bubbles("total_outflow", scale = 1) + tm_shape(mrt_lines) + tm_lines(col = "colour")
tmap_mode("view")
tm_shape(total_outf %>% select(-OBJECTID)) + tm_bubbles("total_outflow", scale = 1) + tm_shape(mrt_lines) + tm_lines(col = "colour")
tm_shape(total_outf %>% select(-OBJECTID)) + tm_bubbles("total_outflow", scale = 0.5) + tm_shape(mrt_lines) + tm_lines(col = "colour")
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines()
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines()
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines()
tmap_mode("view")
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines()
?tm_lines
#tm_shape() + tm_lines(lwd="")
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) #%>%
data %>%
head() %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines(lwd="TOTAL_TRIPS")
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
?tm_bubbles
total_outf
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / ", pluck(1)))
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / ", pluck(1))))
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / ", pluck(1))))
total_outf %>%
select(-OBJECTID)# %>%
#mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / ", pluck(1))))
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1)))
?recode
View(mrt_lines)
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
recode(ORIGIN_CLEAN, str_detect("EW") = #009530)
?str_detect
?str_replace
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(ORIGIN_CLEAN, "EW", #009530)
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(ORIGIN_CLEAN, "EW", #009530)
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
filter(str_detect(ORIGIN_CLEAN, "EW"))
?str_detect
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(ORIGIN_CLEAN, "EW", #009530)
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(ORIGIN_CLEAN, "EW", 009530)
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(ORIGIN_CLEAN, "EW", "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace_all(ORIGIN_CLEAN, "EW", "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace_all(ORIGIN_CLEAN, "EW", "009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace_all(ORIGIN_CLEAN, "EW", replacement = "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace_all(ORIGIN_CLEAN,pattern =  "EW", replacement = "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace_all(string = ORIGIN_CLEAN,pattern =  "EW", replacement = "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(string = ORIGIN_CLEAN,pattern =  "EW", replacement = "#009530")
total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1))) %>%
str_replace(.$ORIGIN_CLEAN,pattern =  "EW", replacement = "#009530")
total_outf <- total_outf %>%
select(-OBJECTID) %>%
mutate (ORIGIN_CLEAN = map_chr(str_split(STN_NO, " / "), pluck(1)))
str_replace(total_outf$ORIGIN_CLEAN, "EW", "GREEN")
total_outf %>%
mutate (colour = str_replace(total_outf$ORIGIN_CLEAN, "EW", "GREEN"))
total_outf %>%
mutate (colour = str_replace_all(total_outf$ORIGIN_CLEAN, "EW", "GREEN"))
View(mrt_lines)
total_outf %>%
mutate (colour = str_replace_all(total_outf$ORIGIN_CLEAN, "EW", "#009530"))
total_outf %>%
mutate (colour = str_replace(total_outf$ORIGIN_CLEAN, "EW", "#009530"))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW", "#009530"))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW", "#009530") %>%  str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW"= "#009530") %>%
%>%  str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW"= "#009530") %>%
%>%  str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, c("EW"= "#009530"))) %>%
%>%  str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW","#009530")) %>%
%>%  str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW","#009530"))  %>%
str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW","#009530")  %>%
str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, "EW"="#009530")  %>%
str_sub(1,-3))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, c("EW"="#009530"))  %>%
str_sub(1,-3))
View(mrt_lines)
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, c("EW"="#009530","DT"="#0354a6"))  %>%
str_sub(1,-3))
View(mrt_lines)
View(mrt_lines)
View(mrt_lines)
View(mrt_lines)
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN, c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3))
View(mrt_lines)
View(mrt_lines)
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(ORIGIN_CLEAN,"#"))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(colour,"#"))
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(colour,"#")) %>%
tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
tmap_mode("view")
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(colour,"#")) %>%
tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(colour,"#")) #%>%
#tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,-3)) %>%
filter(str_detect(colour,"#")) %>%
arrange(colour)
#tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,7)) %>%
filter(str_detect(colour,"#")) %>%
arrange(colour)
#tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,7)) %>%
filter(str_detect(colour,"#")) %>%
arrange(colour) %>%
tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
library(tidyverse)
library(sf)
library(lwgeom)
library(units)
# filter only the dtl stations, represented as point geometries
# we should have 34 stations total (DT4 is reserved for future use)
stations_dtl <- stations_sf %>%
filter(str_detect(STN_NO, "DT")) %>%
st_set_crs(3414) # important, make sure we explicitely set the CRS
?glimpse
View(lines_sf)
lines_sf <- read_sf("mrt_lines.shp")
View(lines_sf)
# filter dtl line, represented as a multiline geometry
line_dtl <- lines_sf %>%
filter(ref == "DTL")
# a quick plot to check if the line and stations draw in the right location
tm_shape(line_dtl) + tm_lines() + tm_shape(stations_dtl) + tm_bubbles()
library(tmap)
# a quick plot to check if the line and stations draw in the right location
tm_shape(line_dtl) + tm_lines() + tm_shape(stations_dtl) + tm_bubbles()
# AFTER SNAPPING
# check the distance of each point with the line
st_snap(stations_dtl, line_dtl, tolerance = 50) %>% st_distance(line_dtl, .)
# a quick sanity test by outputting to the console
# BEFORE SNAPPING
stations_dtl %>% head()
?st_snap
## mmm, that doesn't make sense. despite the distance being within the tolerance, it hasn't snapped
# turns out st_snap only snaps to line start/end, see https://stackoverflow.com/questions/51292952/snap-a-point-to-the-closest-point-on-a-line-segment-using-sf
# we use st_nearest_points instead
st_nearest_points(stations_dtl, line_dtl) # returns a line from the original point to the closest point on our downtown line
View(line_dtl)
View(stations_dtl)
st_nearest_points(stations_dtl, line_dtl) %>% st_line_sample(ls, sample = 1) %>% st_cast("POINT") # take the second point of each line
st_nearest_points(stations_dtl, line_dtl) %>% st_line_sample(ls, sample = 1) %>% st_cast("POINT") # take the second point of each line
# make things permanent now
stations_dtl <- stations_dtl %>%
mutate(geometry = st_nearest_points(geometry, line_dtl) %>%
st_line_sample(ls, sample = 1) %>%
st_cast("POINT"))
# we still do not have the points EXACTLY on the lines...
st_distance(line_dtl, stations_dtl)
# let's create a small buffer around each point, 5 meter will do
stations_dtl <- stations_dtl %>% st_buffer(5)
View(stations_dtl)
tm_shape(stations_dtl) + tm_polygons()
View(stations_dtl)
# filter only the dtl stations, represented as point geometries
# we should have 34 stations total (DT4 is reserved for future use)
stations_dtl <- stations_sf %>%
filter(str_detect(STN_NO, "DT")) %>%
st_set_crs(3414) # important, make sure we explicitely set the CRS
# make things permanent now
stations_dtl <- stations_dtl %>%
mutate(geometry = st_nearest_points(geometry, line_dtl) %>%
st_line_sample(ls, sample = 1) %>%
st_cast("POINT"))
# let's create a small buffer around each point, 5 meter will do
stations_dtl <- stations_dtl %>% st_buffer(5)
tm_shape(stations_dtl) + tm_polygons()
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
?st_set_crs
View(data)
filter(str_detect(ORIGIN_PT_CODE, "NE")
tmap_mode("view")
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y)# %>%
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE="WEEKDAY") %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y)# %>%
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y)# %>%
#st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines(lwd="TOTAL_TRIPS")
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines(lwd="TOTAL_TRIPS") + tm_facets("TIME_PER_HOUR",as.layers = T)
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y)# %>%
#st_as_sf(crs = 3414) %>%
# tm_shape() + tm_lines(lwd="TOTAL_TRIPS") + tm_facets("TIME_PER_HOUR",as.layers = T)
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines(lwd="TOTAL_TRIPS") + tm_facets("ORIGIN_NAME",as.layers = T)
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) #%>%
#st_as_sf(crs = 3414) %>%
#tm_shape() + tm_lines(lwd="TOTAL_TRIPS") + tm_facets("ORIGIN_NAME",as.layers = T)
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() + tm_lines(lwd="sum(TOTAL_TRIPS)") + tm_facets("ORIGIN_NAME",as.layers = T)
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() +tm_layout(title="outflows by destination")+ tm_lines(lwd="sum(TOTAL_TRIPS)", col = "ORIGIN_NAME") + tm_facets("ORIGIN_NAME",as.layers = T)
?tm_lines
tmap_mode("view")
data %>%
filter(str_detect(ORIGIN_PT_CODE, "NE")) %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,DESTINATION_NAME) %>%
summarise(sum(TOTAL_TRIPS)) %>%
left_join(stations_sf, by = c("ORIGIN_NAME" = "STN_NAME")) %>%
left_join(stations_sf, by = c("DESTINATION_NAME" = "STN_NAME")) %>%
rowwise() %>%
mutate(geometry = st_combine(c(geometry.x,geometry.y))
%>% st_cast("LINESTRING")) %>% # note that the pipe between combine and cast is nested within mutate
select(-geometry.x, -geometry.y) %>%
st_as_sf(crs = 3414) %>%
tm_shape() +tm_layout(title="outflows by destination")+ tm_lines(lwd="sum(TOTAL_TRIPS)", col = "ORIGIN_NAME", scale = 10) + tm_facets("ORIGIN_NAME",as.layers = T)
total_outf %>%
mutate (colour = str_replace_all(ORIGIN_CLEAN,c("EW"="#009530","DT"="#0354a6","NS"="#dc241f","NE"="#9016b2","CC"="#FF9A00"))  %>%
str_sub(1,7)) %>%
filter(str_detect(colour,"#")) %>%
arrange(colour) %>%
tm_shape() + tm_bubbles("total_outflow",scale = 0.5, col = "colour") + tm_shape(mrt_lines) + tm_lines(col = "colour")
library(tidyverse)
library(httr)
library(magick)
library(tidyverse)
library(httr)
library(magick)
library(sf)
library(tmap)
?tm_basemap
library(tidyverse)
library(httr)
library(magick)
library(tidyverse)
library(httr)
library(sf)
library(tmap)
data %>%
filter(DAY_TYPE=="WEEKDAY") %>%
group_by(ORIGIN_NAME,TIME_PER_HOUR) %>%
summarise(outflow = sum(TOTAL_TRIPS)) %>%
left_join(stations_sf,by=c("ORIGIN_NAME"="STN_NAME")) %>%
st_sf() %>%
tm_shape()  + tm_layout(title= "weekday outflow by hour") + tm_bubbles(size = "outflow", col = "TIME_PER_HOUR") + tm_facets( "TIME_PER_HOUR", as.layers=T)
#tmap_animation(outflow_per_hour, "outflow_per_hour.gif", delay = 50)
tmap_mode("view")
tmap_mode("view")
st_sf(morning_flows) %>%
tm_shape() + tm_bubbles(col = "net_flow", size = "total_flow" , palette = "PuRd") +
tm_shape(mrt_lines) + tm_lines(col = "colour")
View(morning_flows)
View(morning_flows)
tmap_mode("view")
st_sf(morning_flows) %>% distinct(station, .keep_all = T) %>%
tm_shape() + tm_bubbles(col = "net_flow", size = "total_flow" , palette = "PuRd") +
tm_shape(mrt_lines) + tm_lines(col = "colour")
